## 消息队列



#### 应用场景

##### 异步处理：

* 非核心流程异步化，提高系统响应性能

##### 应用解耦：

* 系统不是强耦合，消息接收者可以随意增加，而不需要修改消息发送者的代码。消息发送者的成功不依赖消息接收者（比如有些银行的借口不稳定，但调用方并不需要依赖这些接口）
* 不强依赖于非本系统的核心流程，对于非核心流程，可以放到消息队列中让消息消费者去按需消费，而不影响核心主流程

##### 最终一致性：

* 先写消息再操作，确保操作完成后再修改消息状态。定时任务补偿机制实现消息可靠发送接收、业务操作的可靠执行，要注意消息重复与幂等设计。
* 所有不保证100%不丢消息的消息队列，理论上无法实现最终一致性。

##### 广播：

* 只需要关心消息是否送达了队列，至于谁希望订阅，是下游的事情。

##### 流量削峰与流控：

* 当上下有系统处理能力存在差距的时候，利用消息队列做一个通用的“漏斗”。在下游有能力处理的时候，在进行分发。

##### 日志处理：

* 将消息队列用在日志处理中，比如Kafka的应用，解决大量日志传输问题

##### 消息通讯：

* 消息队列一般都内置了高校的通信机制，因此也可以用于单纯的消息通讯，比如实现点对点消息队列或者聊天室等。



#### 研究方向

* 问题1： 性能如何做到高效？
* 问题2：持久化机制是怎么进行的？
* 问题3：有哪些业务可以用到消息机制？
* 问题4：消息如何实现幂等？
* 问题5：如何实现延时队列？死亡消息如何处理？如何实现异步调用，如何保障at least once